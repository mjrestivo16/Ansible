---
- name: Deploy Pi-hole on Docker Swarm with updated ports
  hosts: managers
  become: yes
  vars:
    stack_name: "pihole"
    compose_file_path: "/home/ansible/docker/pihole/docker-compose_pihole.yml"
    compose_directory: "/home/ansible/docker/pihole"

  tasks:
    - name: Ensure Docker is installed
      ansible.builtin.command:
        cmd: docker --version
      failed_when: false
      register: docker_installed

    - name: Fail if Docker is not installed
      ansible.builtin.fail:
        msg: "Docker is not installed on the target machine. Please install Docker first."
      when: "'Docker version' not in docker_installed.stdout"

    - name: Check Docker Swarm status
      ansible.builtin.command:
        cmd: docker info
      register: swarm_info

    - name: Initialize Docker Swarm if not active
      ansible.builtin.command:
        cmd: docker swarm init
      when: "'Swarm: active' not in swarm_info.stdout"

    - name: Ensure compose directory exists
      ansible.builtin.file:
        path: "{{ compose_directory }}"
        state: directory
        mode: '0755'

    - name: Create the Docker Compose file for Pi-hole
      ansible.builtin.copy:
        dest: "{{ compose_file_path }}"
        content: |
          version: "3.8"
          services:
            pihole:
              image: pihole/pihole:latest
              networks:
                - pihole_network
              ports:
                - "8053:53/tcp"
                - "8053:53/udp"
                - "8067:67/udp"
                - "8080:80/tcp"  # HTTP accessible on port 8080
              environment:
                TZ: 'America/Chicago'
                WEBPASSWORD: P@ss@t2004
                FTLCONF_LOCAL_IPV4: 192.168.7.21
              volumes:
                - pihole_etc:/etc/pihole
                - dnsmasq_etc:/etc/dnsmasq.d
              deploy:
                mode: replicated
                replicas: 1
                restart_policy:
                  condition: on-failure
          networks:
            pihole_network:
              driver: overlay
          volumes:
            pihole_etc:
            dnsmasq_etc:
        mode: '0644'

    - name: Deploy Pi-hole stack to Docker Swarm
      ansible.builtin.shell:
        cmd: "docker stack deploy -c {{ compose_file_path }} {{ stack_name }}"
      register: deploy_output

    - name: Display stack deployment output
      debug:
        var: deploy_output.stdout

    - name: Verify Pi-hole service is running
      ansible.builtin.command:
        cmd: docker service ls --filter "name={{ stack_name }}_pihole"
      register: docker_service_status

    - name: Display running Pi-hole service
      debug:
        var: docker_service_status.stdout
